<?php
require_once 'config/app.php';
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Radio Stations - API Test</title>
    <link rel="stylesheet" href="css/main.css">
</head>
<body>
    <div class="container">
        <header class="header">
            <h1>üìª Radio Station API Test</h1>
            <p>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p>
            <div class="nav-links">
                <a href="admin" class="nav-link">–ê–¥–º–∏–Ω–∫–∞</a>
            </div>
        </header>

        <div class="search-section">
            <div class="search-form">
                <input type="text" id="searchQuery" placeholder="–í–≤–µ–¥–∏—Ç–µ rock, jazz, news, russian..." class="search-input">
                <select id="searchType" class="search-select">
                    <option value="tag">–ü–æ —Ç–µ–≥—É</option>
                    <option value="name">–ü–æ –∏–º–µ–Ω–∏</option>                    
                    <option value="language">–ü–æ —è–∑—ã–∫—É</option>
                </select>
                <button onclick="performSearch()" class="search-btn">üîç –ü–æ–∏—Å–∫</button>
            </div>
            
            <div class="search-examples">
                <strong>–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫:</strong>
                <span class="example" onclick="setExample('rock')">üé∏ Rock</span>
                <span class="example" onclick="setExample('jazz')">üé∑ Jazz</span>
                <span class="example" onclick="setExample('talk')">üéôÔ∏è Talk</span>
                <span class="example" onclick="setExample('hiphop')">üëë Hip-Hop</span>                
                <span class="example" onclick="setExample('russian')">üá∑üá∫ Russian</span>                
                <span class="example" onclick="setExample('classical')">üéª Classical</span>
            </div>
        </div>

        <div id="loading" class="loading" style="display: none;">
            <p>üîç –ò—â–µ–º —Å—Ç–∞–Ω—Ü–∏–∏...</p>
        </div>

        <div id="results" class="results"></div>
        
        <div class="api-info">
            <h3>üìö API Endpoints:</h3>
            <div class="endpoints">
                <div class="endpoint">
                    <strong>GET</strong> <code>api/search?q=rock&type=name</code>
                    <span>–ü–æ–∏—Å–∫ —Å—Ç–∞–Ω—Ü–∏–π</span>
                </div>
                <div class="endpoint">
                    <strong>GET</strong> <code>api/stations?uuid=station-uuid</code>
                    <span>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞–Ω—Ü–∏–∏</span>
                </div>
            </div>
        </div>
    </div>

    <script>
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ PHP
        const baseUrl = '<?= BASE_URL ?>';
        const apiUrl = '<?= API_URL ?>';
        
        console.log('Base URL:', baseUrl);
        console.log('API URL:', apiUrl);

        function setExample(query) {
            document.getElementById('searchQuery').value = query;
            performSearch();
        }

        async function performSearch() {
            const query = document.getElementById('searchQuery').value.trim();
            const type = document.getElementById('searchType').value;
            
            if (!query) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å');
                return;
            }
            
            const loading = document.getElementById('loading');
            const results = document.getElementById('results');
            
            loading.style.display = 'block';
            results.innerHTML = '';
            
            try {
                const apiUrl = `/api/search?q=${encodeURIComponent(query)}&type=${type}`;
                console.log('üîç API Request:', apiUrl);
                
                const response = await fetch(apiUrl);
                const data = await response.json();
                
                loading.style.display = 'none';
                
                if (data.success) {
                    console.log('‚úÖ Search successful:', {
                        real_stations: data.real_radio?.length || 0,
                        sim_series: data.sim_radio?.length || 0
                    });
                    displayResults(data);
                } else {
                    results.innerHTML = `<div class="error">‚ùå –û—à–∏–±–∫–∞ API: ${data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}</div>`;
                }
                
            } catch (error) {
                loading.style.display = 'none';
                console.error('‚ùå Search failed:', error);
                
                results.innerHTML = `
                    <div class="error">
                        <h4>‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞</h4>
                        <p>${error.message}</p>
                        <p style="font-size: 0.9em; margin-top: 10px;">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É</p>
                    </div>
                `;
            }
        }

        function displayResults(data) {
            const results = document.getElementById('results');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ data - –æ–±—ä–µ–∫—Ç —Å real_radio –∏ sim_radio
            const realStations = data.real_radio || [];
            const simStations = data.sim_radio || [];
            
            if (realStations.length === 0 && simStations.length === 0) {
                results.innerHTML = '<div class="no-results">üòî –°—Ç–∞–Ω—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
                return;
            }
            
            let html = '';
            let totalStations = realStations.length;

            // SIM —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ - –í–´–í–û–î–ò–ú –í–í–ï–†–•–£
            if (simStations.length > 0) {
                // –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ SIM —Å—Ç–∞–Ω—Ü–∏–π
                const totalSimStations = simStations.reduce((total, series) => total + series.stations.length, 0);
                
                html += `<h3>üéÆ –ù–∞–π–¥–µ–Ω–æ SIM —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π: ${totalSimStations} —Å—Ç–∞–Ω—Ü–∏–π –≤ ${simStations.length} —Å–µ—Ä–∏—è—Ö</h3>`;
                
                simStations.forEach(series => {
                    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å–µ—Ä–∏–∏
                    const seriesImageUrl = generateImageUrl(series.url, series.logo);
                    
                    html += `
                        <div class="station-card">
                            <img src="${seriesImageUrl}" alt="${escapeHtml(series.title)}" class="station-favicon" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                            <div class="station-favicon placeholder" style="display: none;">üéÆ</div>
                            <div class="station-info">
                                <div class="station-name">${escapeHtml(series.title)}</div>
                                <div class="station-details">
                                    –°—Ç–∞–Ω—Ü–∏–π –≤ —Å–µ—Ä–∏–∏: ${series.stations.length}
                                </div>
                                <div class="station-stations">
                    `;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å—Ç–∞–Ω—Ü–∏—é –≤ —Å–µ—Ä–∏–∏
                    series.stations.forEach(station => {
                        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å—Ç–∞–Ω—Ü–∏–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º URL —Å–µ—Ä–∏–∏ –∏ logo —Å—Ç–∞–Ω—Ü–∏–∏)
                        const stationImageUrl = generateImageUrl(series.url, station.logo);
                        
                        html += `
                            <div class="sim-station">
                                <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 8px;">
                                    <img src="${stationImageUrl}" alt="${escapeHtml(station.title)}" style="width: 32px; height: 32px; border-radius: 4px; object-fit: cover;" onerror="this.style.display='none'">
                                    <div style="font-weight: bold;">${escapeHtml(station.title)}</div>
                                </div>
                                ${station.tags ? `<div style="color: #666; font-size: 0.9em; margin-left: 42px;">üè∑Ô∏è ${escapeHtml(station.tags)}</div>` : ''}
                            </div>
                        `;
                    });
                    
                    html += `
                                </div>
                            </div>
                        </div>
                    `;
                });
            }
            
            // –†–µ–∞–ª—å–Ω—ã–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ - –í–´–í–û–î–ò–ú –ü–û–°–õ–ï SIM
            if (realStations.length > 0) {
                html += `<h3>üéØ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Ç–∞–Ω—Ü–∏–π: ${realStations.length}</h3>`;
                
                realStations.forEach(station => {
                    const favicon = station.favicon && station.favicon !== '' ? 
                        `<img src="${station.favicon}" alt="Favicon" class="station-favicon" onerror="this.style.display='none'">` : 
                        '<div class="station-favicon placeholder">üìª</div>';
                    
                    html += `
                        <div class="station-card">
                            ${favicon}
                            <div class="station-info">
                                <div class="station-name">${escapeHtml(station.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}</div>
                                <div class="station-details">
                                    ${station.country ? 'üìç ' + station.country : ''} 
                                    ${station.language ? ' ‚Ä¢ üó£Ô∏è ' + station.language : ''}
                                </div>
                                <div class="station-stats">
                                    ${station.votes ? `<span class="stat votes">üëç ${station.votes}</span>` : ''}
                                    ${station.clickcount ? `<span class="stat clicks">üëÜ ${station.clickcount}</span>` : ''}
                                    ${station.clicktrend ? `<span class="stat trend">üìà ${station.clicktrend}</span>` : ''}
                                </div>
                                ${station.tags ? `<div class="station-tags">üè∑Ô∏è ${escapeHtml(station.tags)}</div>` : ''}
                            </div>
                        </div>
                    `;
                });
            }
            
            results.innerHTML = html;
        }

        /**
         * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ URL —Å–µ—Ä–∏–∏ –∏ –ø—É—Ç–∏ –∫ –ª–æ–≥–æ—Ç–∏–ø—É
         * @param {string} seriesUrl - URL —Å–µ—Ä–∏–∏ (—Å new_sim_radio_stations.json –Ω–∞ –∫–æ–Ω—Ü–µ)
         * @param {string} logoPath - –ü—É—Ç—å –∫ –ª–æ–≥–æ—Ç–∏–ø—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
         * @returns {string} –ü–æ–ª–Ω—ã–π URL –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
         */
        function generateImageUrl(seriesUrl, logoPath) {
            if (!seriesUrl || !logoPath) {
                return '';
            }
            
            // –£–±–∏—Ä–∞–µ–º "new_sim_radio_stations.json" –∏–∑ –∫–æ–Ω—Ü–∞ URL
            const baseUrl = seriesUrl.replace(/\/new_sim_radio_stations\.json$/, '');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ª–æ–≥–æ—Ç–∏–ø—É –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .png
            return `${baseUrl}/${logoPath}.png`;
        }

        function escapeHtml(unsafe) {
            if (!unsafe) return '';
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter
        document.getElementById('searchQuery').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                performSearch();
            }
        });
    </script>
</body>
</html>